// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  COMPLETED
  PROCECCING
  PENDING
  CANCELED
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  role     Role    @default(CUSTOMER)
  password String
  email    String  @unique
  image    String?
  carts    Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  @@index([email])
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Int
  image       String
  cartItems   CartItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Cart {
  id    Int        @id @default(autoincrement())
  items CartItem[]

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  customerId Int
  customer   User @relation(fields: [customerId], references: [id])

  cartId Int
  cart   Cart @relation(fields: [cartId], references: [id], onDelete: NoAction)

  status OrderStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
